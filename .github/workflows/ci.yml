name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Detect package manager
        id: pm
        run: |
          if [[ -f pnpm-lock.yaml ]]; then
            echo "mgr=pnpm" >> "$GITHUB_OUTPUT"
            echo "cache=pnpm" >> "$GITHUB_OUTPUT"
            corepack enable
          elif [[ -f yarn.lock ]]; then
            echo "mgr=yarn" >> "$GITHUB_OUTPUT"
            echo "cache=yarn" >> "$GITHUB_OUTPUT"
            corepack enable
          else
            echo "mgr=npm" >> "$GITHUB_OUTPUT"
            echo "cache=npm" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ${{ steps.pm.outputs.cache }}
          cache-dependency-path: |
            package-lock.json
            pnpm-lock.yaml
            yarn.lock

      - name: Install dependencies
        run: |
          case "${{ steps.pm.outputs.mgr }}" in
            pnpm) pnpm install --frozen-lockfile ;;
            yarn) yarn install --frozen-lockfile ;;
            npm)  if [ -f package-lock.json ]; then npm ci; else npm install; fi ;;
          esac

      - name: Run tests if present
        run: |
          node -e "const p=require('./package.json');process.exit(p.scripts&&p.scripts.test?0:1)" \
          || { echo "No test script. Skipping."; exit 0; }
          case "${{ steps.pm.outputs.mgr }}" in
            pnpm) pnpm test ;;
            yarn) yarn test --ci --watchAll=false ;;
            npm)  npm test ;;
          esac

      - name: Build if present
        run: |
          node -e "const p=require('./package.json');process.exit(p.scripts&&p.scripts.build?0:1)" \
          || { echo "No build script. Skipping."; exit 0; }
          case "${{ steps.pm.outputs.mgr }}" in
            pnpm) pnpm run build ;;
            yarn) yarn build ;;
            npm)  npm run build ;;
          esac
